실제로 플라스크 앱은 다음 코드에서 보듯 Flask 클래스로 만든 객체를 말한다.

app = Flask(__name__)

플라스크는 app 객체를 사용해 여러 가지 설정을 진행한다. 그런데 이와 같은 방식으로 app 객체를 전역으로 사용하면 프로젝트 규모가 커질수록 문제가 발생할 확률이 높아진다. 

순환 참조(circular import) 오류가 대표적이다

순환 참조란 A 모듈이 B 모듈을 참조하고 B 모듈이 다시 A 모듈을 참조하는 경우를 말한다.

app 객체를 전역으로 사용할 때 발생하는 문제를 예방하려면 어떻게 해야 할까? 플라스크 공식 홈페이지에서는 "애플리케이션 팩토리(application factory)를 사용하라"고 권한다.

app.py를 __init__.py 파일로 변경하기

즉 app.py를 main 폴더 안으로 옮기고 이를 __init__.py 파일로 변경 하므로 순환참조 에러에서 벗어날 수 있다.